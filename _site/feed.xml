<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris Burgin</title>
    <description>Personal site for Chris Burgin from Louisville Kentucky. Ministry, Web Development, Lighting Design.
</description>
    <link>chrisburgin.me/</link>
    <atom:link href="chrisburgin.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 01 Mar 2016 23:48:05 -0500</pubDate>
    <lastBuildDate>Tue, 01 Mar 2016 23:48:05 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Faded</title>
        <description>&lt;p&gt;Today I felt like playing around in sketch for an hour or so. Heres the result.&lt;/p&gt;

&lt;h3 id=&quot;download-them-here-svg-pngf576fa75&quot;&gt;&lt;a href=&quot;https://drive.google.com/open?id=0B0tp4gudmsGfbzN5SWsyZjVRRU0&quot; title=&quot;Download Them HEre&quot;&gt;Download Them Here (svg, png)&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/5egsLhZ.png&quot; alt=&quot;Fade Main&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qXn7Tfn.png&quot; alt=&quot;Fade Text Page&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 11 Jan 2016 00:00:00 -0500</pubDate>
        <link>chrisburgin.me/design/2016/01/11/Faded.html</link>
        <guid isPermaLink="true">chrisburgin.me/design/2016/01/11/Faded.html</guid>
        
        <category>design</category>
        
        <category>sketch</category>
        
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>Twitter Song Polling Application</title>
        <description>&lt;p&gt;Recently I have started working on a personal project involving twitter polling. This application allows for the input of songs and creation polls which can then be presented to an audience via an external screen.&lt;/p&gt;

&lt;p&gt;These songs can then be voted on via twitter, of which the highest will be selected and played, and then the next poll will be started.&lt;/p&gt;

&lt;p&gt;Im currently working on this application and have made progress but Im expecting to be working on this through this christmas and be finished early next year. Ive loaded some images below, obviously this is a work in progress but much of the base is coming together.&lt;/p&gt;

&lt;p&gt;Once I am finished I will make my github repo public for this project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/vWEJ0wg.png&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/BPN8tDJ.png&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/IlLnzo6.png&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/5OtWIoM.png&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/LaC2UKH.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Jan 2016 00:00:00 -0500</pubDate>
        <link>chrisburgin.me/programming/2016/01/06/New-Polling-Application.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2016/01/06/New-Polling-Application.html</guid>
        
        <category>Polling</category>
        
        <category>Twitter</category>
        
        <category>Javascript</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Python Political Data Collector</title>
        <description>&lt;h4 id=&quot;view-on-githubhttpsgithubcomchrisburgin95twitter-data-collectorsettings&quot;&gt;&lt;a href=&quot;https://github.com/chrisburgin95/twitter-data-collector/settings&quot;&gt;View on Github&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;With the looming election and politics around every corner I wanted to have some fun collecting some data from my friends. I wanted to figure out whether my friends leaned to the left, or to the right. With one catch, I didn’t want to ask them.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;
&lt;p&gt;The data for this needs to come from somewhere, for this project its twitter. A simple python script looks for twitter usernames inputed into a mysql database. From here the script use the twitter API to fetch their userid and begin pulling in the users tweets, storing them in a database.&lt;/p&gt;

&lt;p&gt;Users tweets are then parsed into single words, which are stored in a database with a foreign key linking them to the original tweet.&lt;/p&gt;

&lt;h2 id=&quot;left-or-right&quot;&gt;Left or Right&lt;/h2&gt;
&lt;p&gt;After collecting this data, its time to look into the users political stance. Users tweets are compared too the most used words by both republican and democratic presidential candidates.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.forbes.com/sites/kalevleetaru/2015/09/18/second-republican-debate-word-clouds-what-the-candidates-talked-about/&quot;&gt;Forbes Presidential Words&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results were fairly interesting, I don’t have enough data to draw a conclusion as to whether my program is correct or not. Humans are more complex than their 140 character tweet, so it would be foolish to think I can define even their political views from so little information.&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 -0500</pubDate>
        <link>chrisburgin.me/programming/2016/01/02/Twitter-Data-Collector.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2016/01/02/Twitter-Data-Collector.html</guid>
        
        <category>programming</category>
        
        <category>python</category>
        
        <category>data</category>
        
        <category>sql</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Bankers Rounding - Python Library</title>
        <description>&lt;h4 id=&quot;view-on-githubhttpsgithubcomchrisburgin95python-bankers-rounding&quot;&gt;&lt;a href=&quot;https://github.com/chrisburgin95/Python-Bankers-Rounding&quot;&gt;View On Github&lt;/a&gt;&lt;/h4&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The Problem&lt;/h3&gt;
&lt;p&gt;Normally rounding is bias to round up. This is due to the fact that we
round up for 5,6,7,8,9,10 and round down for 1,2,3,4 this means that 60% of
the time we round up and 40% of the time we round down.&lt;/p&gt;

&lt;h3 id=&quot;the-fix&quot;&gt;The Fix&lt;/h3&gt;
&lt;p&gt;By using banker rounding we have a 50% chance of rounding up or down.
- If our number is &lt;strong&gt;6 or above we round up&lt;/strong&gt;
- If our number is &lt;strong&gt;4 or below we round down&lt;/strong&gt;
- If our number is &lt;strong&gt;5&lt;/strong&gt; we have to look at the &lt;strong&gt;digit to the left&lt;/strong&gt;
    - If it is &lt;strong&gt;odd&lt;/strong&gt; we round up to the &lt;strong&gt;nearest even&lt;/strong&gt;
    - If it is &lt;strong&gt;even&lt;/strong&gt; we &lt;strong&gt;leave it alone&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&amp;gt;= 6 # 2.966 would become 2.97&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;= 5 # 2.965 would become 2.96&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;= 5 # 2.975 would become 2.98&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;= 6 # 2.973 would become 2.97&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;- Python 3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;main-functionality&quot;&gt;Main Functionality&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;BankersRounding(number, breakpoint) \\ returns a bankers rounded number
    - number \\ required float
    - breakpoint \\ optional integer, rounding location, default=2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;additional-functionality&quot;&gt;Additional Functionality&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;FloatToList(number) \\  converts &#39;number&#39; and returns a list of integers
    - number \\ required float

ListToFloat(list) \\ returns a converted float
    - list \\ required list derived from &#39;FloatToList&#39;

LocateDecimal(list) \\ returns a decimal location
    - list \\ required list derived from &#39;FloatToList&#39;

Trim(list, endpoint) \\ returns a trimmed list
    - list \\ required list derived from &#39;FloatToList&#39;
    - endpoint \\ required int, represents trim location
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 28 Oct 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/programming/2015/10/28/BankersRounding.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2015/10/28/BankersRounding.html</guid>
        
        <category>Bankers</category>
        
        <category>Rounding</category>
        
        <category>Python</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Podcasts</title>
        <description>&lt;p&gt;Recently I was turned on to podcast by @steveostudios. Here is a list of Podcasts that I have picked in my pod catcher in my short
podcasting career.&lt;/p&gt;

&lt;h3 id=&quot;shop-talk-show&quot;&gt;Shop Talk Show&lt;/h3&gt;
&lt;p&gt;A self proclaimed sound effects podcast about web development. This is probably my favorite podcast. Each week Chris Collier and Dave Rupert bring on a guest from the front in web development world where they are interviewed with user submitted questions. Theres lots of episodes but start from the beginning, its worth the time to see how web development has evolved.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://shoptalkshow.com/&quot;&gt;Visit Shop Talk Show&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;code-pen-radio&quot;&gt;Code Pen Radio&lt;/h3&gt;
&lt;p&gt;The story behind the founding and on-going development of codepen.io. This podcast features Chris Collier, Alex Vazquez and Tim Sabat. The great thing about this podcast is that it dives into the lives of startup founders, not just code but the day to day lives of the hosts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.codepen.io/radio/&quot;&gt;Visit Code Pen Radio&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;welcome-to-night-vale&quot;&gt;Welcome to Night Vale&lt;/h3&gt;
&lt;p&gt;Not a technical podcast, this is the story of a mythical town in the desert called. This podcast follows a local radio host and his bi-monthly reporting. Its probably the strangest on the list and its one of my favorites and also the first podcast I listed too.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.commonplacebooks.com/welcome-to-night-vale/&quot;&gt;Visit Welcome to Night Vale&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are my current podcast, I have a few other in my query which include &lt;a href=&quot;http://thehistoryofrome.typepad.com/&quot;&gt;History of Rome&lt;/a&gt; and &lt;a href=&quot;http://freakonomics.com/radio/&quot;&gt;Freakanomics Radio&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/podcasts/2015/09/16/Podcasts.html</link>
        <guid isPermaLink="true">chrisburgin.me/podcasts/2015/09/16/Podcasts.html</guid>
        
        <category>Podcasts</category>
        
        <category>Shoptalk</category>
        
        <category>CodePen</category>
        
        <category>NightVale</category>
        
        
        <category>podcasts</category>
        
      </item>
    
      <item>
        <title>Duck Duck Go</title>
        <description>&lt;p&gt;The search engine you have never head of, or maybe you have. About 5 months ago I was convinced to switch over to &lt;a href=&quot;http://duckduckgo.com&quot;&gt;DuckDuckGo&lt;/a&gt; by a good friend. At first I was not a fan, it was different than the only search engine I had ever used, but I learned how amazing DuckDuckGo can be!&lt;/p&gt;

&lt;h2 id=&quot;bang&quot;&gt;!BANG&lt;/h2&gt;
&lt;p&gt;This is probably the greatest feature of DuckDuckGo, bangs let you search most any website directly from DuckDuckGo. Let me give you a search example!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;15in Macbook Pro !a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you were to type this in to DuckDuckGo you would be taken to Amazon with search results for 15in Macbook Pro’s. This works with many other services such as Google, Youtube, Yahoo, etc…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fat cat photos !g | Encrypted Google Search
fat cat videos !youtube | Youtube
Harry Whittier Frees !w  | wikipedia
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DuckDuckGo has a list of 6,395 &lt;a href=&quot;https://duckduckgo.com/bang&quot;&gt;!Bangs&lt;/a&gt; that you can use. Don’t forget you can set DuckDuckGo to your default search and use bangs when searching from your nav bar.&lt;/p&gt;

&lt;h2 id=&quot;no-tracking&quot;&gt;No Tracking&lt;/h2&gt;
&lt;p&gt;The other major selling point of DuckDuckGo is that they fight to keep you private. DuckDuckGo does not track any of your information, including searches. Checkout their &lt;a href=&quot;https://duckduckgo.com/privacy&quot;&gt;privacy policy&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;free-t-shirt&quot;&gt;Free T-Shirt&lt;/h2&gt;
&lt;p&gt;Convince 3 of your friends or family to switch over to the duck and you’ll get a free snazzy T-Shirt. Check it out &lt;a href=&quot;https://duckduckgo.com/spread&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 11 Sep 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/other/2015/09/11/DuckDuckGo.html</link>
        <guid isPermaLink="true">chrisburgin.me/other/2015/09/11/DuckDuckGo.html</guid>
        
        <category>DuckDuckGo</category>
        
        <category>Search</category>
        
        
        <category>other</category>
        
      </item>
    
      <item>
        <title>Gatehouse Update 0.2.0</title>
        <description>&lt;p&gt;Recently working with &lt;a href=&quot;https://twitter.com/kurtrank&quot;&gt;Kurt Rank&lt;/a&gt; we have decided on the name Gatehouse for this project. We think it clearly describes the project and just sounds plain cool!&lt;/p&gt;

&lt;h4 id=&quot;view-on-githubhttpsgithubcomchrisburgin95gatecontrol&quot;&gt;&lt;a href=&quot;https://github.com/chrisburgin95/Gatecontrol&quot;&gt;View on Github&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Checkout the readme and wiki on github for more information. There is fairly extensive documentation&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;whats-in-version-020&quot;&gt;Whats in version 0.2.0?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Updated Code Comments&lt;/li&gt;
  &lt;li&gt;Styling (name, font, logo)&lt;/li&gt;
  &lt;li&gt;Small Visual Bug (&lt;a href=&quot;https://github.com/chrisburgin95/Gatecontrol/issues/4&quot;&gt;#4&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Setup Script&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;Whats Next?&lt;/h3&gt;
&lt;p&gt;Next on the list to tackle is an optional auto update feature. You can keep an eye on this feature &lt;a href=&quot;https://github.com/chrisburgin95/Gatecontrol/issues/5&quot;&gt;here&lt;/a&gt; on github.&lt;/p&gt;

&lt;p&gt;Along with this we are working on an stand alone website covering basic information about Gatecontrol. I’ll have a post covering this shortly.&lt;/p&gt;

&lt;h3 id=&quot;desktop-version&quot;&gt;Desktop version&lt;/h3&gt;
&lt;p&gt;This isn’t a new feature but we just wanted to highlight that Gatecontrol is fully responsive and will work on all modern browsers. Lets skip IE 8 and below for now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/QJdQLeQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mobile-gallary&quot;&gt;Mobile Gallary&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/aTWWiCG.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://i.imgur.com/pPlYeCJ.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://i.imgur.com/7A8q6fe.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Aug 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/programming/2015/08/27/Gatehouse-Update.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2015/08/27/Gatehouse-Update.html</guid>
        
        <category>pi</category>
        
        <category>gatehouse</category>
        
        <category>update</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Remote Garage Door Opener</title>
        <description>&lt;p&gt;For the past 2 months I have been having a great time working on my Saturday project. A remote Garage Door Opener that runs on a raspberry pi. Ive gone beyond just a simple php script that lets you open and close your door.&lt;/p&gt;

&lt;p&gt;This application, which for the time I am calling Pi Garage (it needs a new name desperatly), has a full user account system with differing level of permissions.&lt;/p&gt;

&lt;h4 id=&quot;view-on-githubhttpsgithubcomchrisburgin95gatecontrol&quot;&gt;&lt;a href=&quot;https://github.com/chrisburgin95/Gatecontrol&quot;&gt;View on Github&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Checkout the readme and wiki on github for more information. There is fairly extensive documentation&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;types-of-accounts&quot;&gt;Types Of Accounts&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Admin User: This user can add, remove, and edit existing users as well as open and close the garage door.&lt;/li&gt;
  &lt;li&gt;Normal User: This user can only open or close the garage door.&lt;/li&gt;
  &lt;li&gt;Temporary Users: This user expires after a set amount of time and can only open and close the garage door.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;let-me-explain&quot;&gt;Let Me Explain&lt;/h3&gt;
&lt;p&gt;The main concept behind this application is not to replace the classic garage door opener but to provide more functionality while not cluttering the basic idea. To move a large piece of metal out of the way remotely from anywhere in the world.&lt;/p&gt;

&lt;p&gt;This could be useful for families who have more members than garage door openers or when away on vacation. You can now give your house sitter temporary access to your house that will automatically expire.&lt;/p&gt;

&lt;p&gt;More detailed examples can be found on my github detailing the functionality of this device, including security. I wont go into to much detail in this post. In following post I will talk about the process as well go into more detail on installation. All of which is still covered on github.&lt;/p&gt;

&lt;h3 id=&quot;future-expansion&quot;&gt;Future Expansion&lt;/h3&gt;
&lt;p&gt;Right now this is just the base application, the Idea is to expand in the near future with some of the following features that should take little time now that the base application is complete.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Log: Track when the door has been opened and closed as well as when users have been created, removed or modified.&lt;/li&gt;
  &lt;li&gt;Camera: A camera will show the current status of the door, as either open or close. This will allow for the users to access their garage door remotely visually check the status of the door.&lt;/li&gt;
  &lt;li&gt;Magnetic Sensors: Another build in optional feature that can read out if the door is open or closed. This is a cheaper solution to the camera but the user will not be able to check for obstructing objects.&lt;/li&gt;
  &lt;li&gt;More Advanced User Permissions: Set strict times that the door can be used for each user.&lt;/li&gt;
  &lt;li&gt;Notification System: Be notified when the door has been opened or closed by another user from the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gallary&quot;&gt;Gallary&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/7wxUytC.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/D7vS2HI.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/rjRuYSy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Aug 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/programming/2015/08/21/Remote-Garage-Door-Opener.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2015/08/21/Remote-Garage-Door-Opener.html</guid>
        
        <category>pi</category>
        
        <category>garage</category>
        
        <category>python</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Compression</title>
        <description>&lt;p&gt;Lately I found myself using several different types of compression on a regular basis. This is a quick documentation of the 3 types of compression I find myself using and what my standard uses are.&lt;/p&gt;

&lt;h3 id=&quot;zip&quot;&gt;ZIP&lt;/h3&gt;
&lt;p&gt;Standard ZIP Compression is fast but provides minimum compression. I find this useful when I need to zip a folder to move from one server to another when the time it takes for a high level compression isn’t worth it.&lt;/p&gt;

&lt;p&gt;Zipping a folder to move with secure copy takes much less time than trying to use recursive secure copy on an entire folder.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;zip -r foldername.zip /file/or/folder/to/compress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To uncompress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;zip unzip foldername.zip /extract/here&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tar-gz&quot;&gt;TAR GZ&lt;/h3&gt;
&lt;p&gt;This form of TAR compression provides a decent compression level and isn’t to processor intensive. I find this compression works well for when I need to download a file from a server.&lt;/p&gt;

&lt;p&gt;The transfer speed from server to server can peak out at 20mb/s, which makes it easy to transfer large files. But when downloading files to my local machine speeds normally only reach 3 or 4mb/s. Even with this slower speed it is still beneficial to use a slightly lower level compression that runs quicker.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -cvzf archive.tar.gz /file/or/folder/to/compress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To uncompress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -zxvf archive.tar.bz2 /extract/here&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another nice feature of TAR.GZ is that you can specify the compression level. The default of which is -6 with -9 being the maximum.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ GZIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-9 tar -cvzf archive.tar.gz /file/or/folder/to/compress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tar-bz2&quot;&gt;TAR BZ2&lt;/h3&gt;
&lt;p&gt;BZ2 provides the best compression level of the formats listed. The downside being that BZ2 is processor intensive. I use this compression the most when creating long term backups. For me the time is worth the extra space I gain on my external backup drive. As mentioned above you can also modify the compression level.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -jcvf archive.tar.bz2 /file/or/folder/to/compress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To uncompress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -jxvf archive.tar.bz2 /extract/here&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 20 Aug 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/programming/2015/08/20/Compression.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2015/08/20/Compression.html</guid>
        
        <category>compression</category>
        
        <category>zip</category>
        
        <category>gz</category>
        
        <category>bz2</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Switching from Sublime to Atom</title>
        <description>&lt;p&gt;Earlier this month I was talked into making the switch from my beloved sublime to &lt;a href=&quot;http://jekyllrb.io&quot;&gt;Atom&lt;/a&gt;. Ive gone through a few code editors over the past few years, including &lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt; (how and why did I do this??), &lt;a href=&quot;https://www.panic.com/coda/&quot;&gt;Coda 2&lt;/a&gt; (love but bulky), &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime 2&lt;/a&gt; (everything I want and ugly), and now atom (everything I want, more, and beautifull).&lt;/p&gt;

&lt;p&gt;I think its fairly safe to say that Atom is my new favorite code and editor, and even markdown writer. It has everything I want, A beautiful interface, amazing package library, and great community support.&lt;/p&gt;

&lt;h2 id=&quot;theme&quot;&gt;Theme&lt;/h2&gt;

&lt;p&gt;Something I’ve always despised about the majority of themes for code editors is the lack of an amazing light theme. There is an abundance of dark themes for every editor and they all look great, but Im tired of using dark themes. It makes me tired and I just don’t feel inspired when using a dark theme. Atom solved this problem for me right from the start. Included is the amazing &lt;a href=&quot;https://github.com/atom/one-light-ui&quot;&gt;One Light&lt;/a&gt;, it looks great, easy to read, and the syntax color selection is perfect.&lt;/p&gt;

&lt;h2 id=&quot;other-packages&quot;&gt;Other Packages&lt;/h2&gt;

&lt;p&gt;After I enabled this theme there were a few other minor modifications and packages I installed before feeling right at home in Atom.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/minimap&quot;&gt;Atom Mini Map&lt;/a&gt; - A great package that carries over the mini map functionality that so many people loved from sublime.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter&quot;&gt;Atom Linter&lt;/a&gt; - This is something I recently started using just before my switch from Sublime to Atom. Linters help you catch errors as well as keep your code uniform. &lt;a href=&quot;https://github.com/AtomLinter/linter-pyflakes&quot;&gt;PyFlakes&lt;/a&gt; and &lt;a href=&quot;https://atom.io/packages/linter-jshint&quot;&gt;JSHint&lt;/a&gt; are the main two language extensions I use with Atom Linter.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot;&gt;Markdown Writer&lt;/a&gt; - Simple markdown editor with a live preview.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-perks&quot;&gt;Other Perks&lt;/h2&gt;
&lt;p&gt;Additionally there are some perks to Atom that sold me on my decision.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Git Status&lt;/strong&gt; - Atom shows which files and lines have not been commited if you are working in a git repo. It gets as specific as showing which lines are &lt;font color=&quot;#1cdf53&quot;&gt; new &lt;/font&gt;, &lt;font color=&quot;#e39d34&quot;&gt; edited&lt;/font&gt; and even where lines have been &lt;font color=&quot;#ff1700&quot;&gt;removed&lt;/font&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Better Split Views&lt;/strong&gt; - Atoms Split view is worlds easier to use than sublime. Simply right click and choose how you would like to split the pane. Atom supports both horizontal and Vertically splitting.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Visual Package Manager&lt;/strong&gt; - Atom provides a visual, searchable packages manager while still allowing you to access commands through &lt;code&gt;cmd + shift + p&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt; - Yes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Along with these perks I love that Atom is in active development. Sublime 3 has been in beta now for quite some time now and is still loaded with bugs, and while sublime 2 is very reliable its community is starting to shrink rapidly with introduction of more modern text editors.&lt;/p&gt;

&lt;h2 id=&quot;downsides&quot;&gt;Downsides&lt;/h2&gt;
&lt;p&gt;The only downside that I have experienced with Atom is that it runs on a &lt;a href=&quot;http://www.chromium.org/&quot;&gt;Chromium&lt;/a&gt; engine. If your on a older machine you will likely notice that atom is heavy and slow to open.&lt;/p&gt;

&lt;p&gt;Atom is build on what is now known as &lt;a href=&quot;https://github.com/atom/electron&quot;&gt;Electron&lt;/a&gt;, formerly known as Atom Shell, this is a very cool piece of software that lets to write cross platform native applications using html, css, and javascript very easily, it works by running your application on a Chromium engine and provides a set of tools for interacting with your environment.&lt;/p&gt;

&lt;h2 id=&quot;get-it&quot;&gt;Get It&lt;/h2&gt;
&lt;p&gt;All in all Atom is a great code editor that provides all the functionality I need while remaining visually appealing and having a great community to back it up. Its worth the switch for most people, and since it open source theres not much harm in just giving it a try if your on the border.&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Aug 2015 00:00:00 -0400</pubDate>
        <link>chrisburgin.me/programming/2015/08/19/Sublime-to-Atom.html</link>
        <guid isPermaLink="true">chrisburgin.me/programming/2015/08/19/Sublime-to-Atom.html</guid>
        
        <category>programming</category>
        
        <category>atom</category>
        
        <category>sublime</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
